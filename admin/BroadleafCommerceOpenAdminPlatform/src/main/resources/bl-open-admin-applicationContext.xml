<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
           http://www.springframework.org/schema/context
           http://www.springframework.org/schema/context/spring-context-3.0.xsd
           http://www.springframework.org/schema/tx
           http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
           http://www.springframework.org/schema/aop
           http://www.springframework.org/schema/aop/spring-aop-3.0.xsd">
    
    <bean id="conversionService" class="org.springframework.context.support.ConversionServiceFactoryBean">
	    <property name="converters">
	        <list>
	            <bean class="org.broadleafcommerce.openadmin.server.util.TargetModeTypeConverter" />
	        </list>
	    </property>
	</bean>
	
    <context:component-scan base-package="org.broadleafcommerce.persistence"/>
    <context:component-scan base-package="org.broadleafcommerce.openadmin"/>
    
    <bean id="blPasswordEncoder" class="org.springframework.security.authentication.encoding.PlaintextPasswordEncoder"/>
    
    <bean id="blEntityConfiguration" class="org.broadleafcommerce.persistence.EntityConfiguration">
		<property name="entityContexts">
			<list>
				<value>classpath:bl-open-admin-applicationContext-entity.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="blPersistenceUnitManager" class="org.broadleafcommerce.profile.extensibility.jpa.MergePersistenceUnitManager">
		<property name="persistenceXmlLocations">
			<list>
				<value>classpath*:/META-INF/persistence-admin.xml</value>
			</list>
		</property>
	</bean>
	
	<bean id="blSandBoxEntityManagerFactory" class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean" depends-on="blCacheManager">
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
		</property>
		<property name="persistenceUnitManager" ref="blPersistenceUnitManager"/>
		<property name="persistenceUnitName" value="blSandboxPU"/>
	</bean>
	
	<bean id="blTransactionManagerSandBox" class="org.springframework.orm.jpa.JpaTransactionManager">
		<property name="entityManagerFactory" ref="blSandBoxEntityManagerFactory" />
	</bean>

	<tx:advice id="blTxAdviceSandBox" transaction-manager="blTransactionManagerSandBox">
	    <tx:attributes>
	      <tx:method name="*" propagation="REQUIRED"/>
	    </tx:attributes>
	</tx:advice>
	
	<aop:config>
		<aop:pointcut id="blAdminSecurityServiceSaveOperation" expression="execution(* org.broadleafcommerce.openadmin.server.security.service.AdminSecurityService.save*(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blAdminSecurityServiceSaveOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blAdminSecurityServiceDeleteOperation" expression="execution(* org.broadleafcommerce.openadmin.server.security.service.AdminSecurityService.delete*(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blAdminSecurityServiceDeleteOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceInspectOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.inspect(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceInspectOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceFetchOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.fetch(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceFetchOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceAddOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.add(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceAddOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceUpdateOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.update(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceUpdateOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blRemoteServiceRemoveOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.DynamicEntityRemoteService.remove(..))"/>
	    <aop:advisor advice-ref="blTxAdvice" pointcut-ref="blRemoteServiceRemoveOperation"/>
	</aop:config>
	
	<aop:config>
		<aop:pointcut id="blSandBoxServiceSaveOperation" expression="execution(* org.broadleafcommerce.openadmin.server.service.persistence.SandBoxService.saveSandBox(..))"/>
	    <aop:advisor advice-ref="blTxAdviceSandBox" pointcut-ref="blSandBoxServiceSaveOperation"/>
	</aop:config>
	
	<bean id="blPersistenceManager" class="org.broadleafcommerce.openadmin.server.service.persistence.PersistenceManagerImpl" scope="prototype">
		<constructor-arg>
			<list>
				<bean class="org.broadleafcommerce.openadmin.server.service.persistence.module.BasicPersistenceModule"/>
				<bean class="org.broadleafcommerce.openadmin.server.service.persistence.module.JoinStructurePersistenceModule"/>
				<bean class="org.broadleafcommerce.openadmin.server.service.persistence.module.MapStructurePersistenceModule"/>
			</list>
		</constructor-arg>
		<property name="targetEntityManagers">
			<map>
                <entry key="sandbox" value="sandBoxEntityManagerPool"/>
                <entry key="stage" value="standardEntityManager"/>
                <entry key="prod" value="standardEntityManager"/>
            </map>
		</property>
		<property name="sandBoxService" ref="blSandBoxService"/>
		<property name="dynamicEntityDao" ref="blDynamicEntityDao"/>
	</bean>
	
	<bean id="standardEntityManager" class="org.springframework.orm.jpa.support.SharedEntityManagerBean">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>  
    </bean>
			        
	<bean id="sandBoxEntityManagerPool" class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.SandBoxEntityManagerPoolFactoryBean">
		<property name="mySharedEntityManagerBeanRef" value="sandBoxEntityManager"/>
	</bean>
	
	<bean id="sandBoxEntityManager" class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.SandBoxSharedEntityManagerBean" scope="prototype">
        <property name="entityManagerFactory" ref="entityManagerFactory"/>
        <property name="sandBoxEntityManagerFactory">
        	<bean class="org.broadleafcommerce.openadmin.server.service.persistence.entitymanager.ClonedLocalContainerEntityManagerFactoryBean">
				<property name="jpaVendorAdapter">
					<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter"/>
				</property>
				<property name="persistenceUnitManager" ref="blPersistenceUnitManager"/>
				<property name="persistenceUnitName" value="blMySandBoxPU"/>
				<property name="clonePersistenceUnitName" value="blPU"/>
				<property name="dataSource" ref="blSandBoxDataSource"/>
			</bean>
        </property>
    </bean>
    
    <bean id="blSandBoxDataSource" class="org.broadleafcommerce.openadmin.server.service.persistence.datasource.SandBoxDataSource" destroy-method="close"/>
	
	<bean id="blDynamicEntityDao" class="org.broadleafcommerce.openadmin.server.dao.DynamicEntityDaoImpl">
	    <property name="sessionFactory">
	    	<bean factory-bean="entityManagerFactory" factory-method="getSessionFactory" />
	    </property>
		<property name="ejb3ConfigurationDao">
			<bean class = "org.broadleafcommerce.openadmin.server.dao.EJB3ConfigurationDaoImpl">
				<property name="persistenceUnitInfo">
					<bean factory-bean="entityManagerFactory" factory-method="getPersistenceUnitInfo" />
				</property>
			</bean>
		</property>
	</bean>

	<bean id="blFieldManager" class="org.broadleafcommerce.openadmin.server.service.persistence.module.FieldManager" scope="prototype"/>
	
</beans>